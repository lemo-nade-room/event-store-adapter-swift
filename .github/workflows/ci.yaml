name: ci
on:
  push:
    branches: [ main ]
    paths:
      - ".github/workflows/ci.yaml"
      - "**.swift"
      - ".swift-format"
      - "compose.yaml"
      - "Package.resolved"
  pull_request:
    branches: [ main ]
    paths:
      - ".github/workflows/ci.yaml"
      - "**.swift"
      - ".swift-format"
      - "compose.yaml"
      - "Package.resolved"
  schedule:
    - cron: '0 0 * * *'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test-small:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          key: swift-build-package-resolved-${{ runner.os }}-${{ runner.arch }}-${{ hashFiles('Package.resolved') }}
          path: .build
      - name: Install Swift
        run: |
          sudo apt-get update
          sudo apt-get install -y libcurl4-openssl-dev
          curl -O https://download.swift.org/swiftly/linux/swiftly-$(uname -m).tar.gz
          tar zxf swiftly-$(uname -m).tar.gz
          ./swiftly init --verbose --assume-yes --skip-install
          . ~/.local/share/swiftly/env.sh
          swiftly install 6.1
          echo "$(dirname $(which swift))" >> $GITHUB_PATH
      - run: swift build
      - run: swift test
        env:
          TEST_LEVEL: small
  test-medium:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    needs: test-small
    services:
      dynamodb:
        image: "amazon/dynamodb-local:latest"
        ports:
          - "8001:8000"
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          key: swift-build-package-resolved-${{ runner.os }}-${{ runner.arch }}-${{ hashFiles('Package.resolved') }}
          path: .build
      - name: Install Swift
        run: |
          sudo apt-get update
          sudo apt-get install -y libcurl4-openssl-dev
          curl -O https://download.swift.org/swiftly/linux/swiftly-$(uname -m).tar.gz
          tar zxf swiftly-$(uname -m).tar.gz
          ./swiftly init --verbose --assume-yes --skip-install
          . ~/.local/share/swiftly/env.sh
          swiftly install 6.1
          echo "$(dirname $(which swift))" >> $GITHUB_PATH
      - run: swift test
        env:
          TEST_LEVEL: medium
          AWS_ACCESS_KEY_ID: dummy
          AWS_SECRET_ACCESS_KEY: dummy
      - if: always()
        run: docker compose down